from flask import Flask, request, jsonify
import openpyxl
import random
import re

app = Flask(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º Excel-—Ñ–∞–π–ª
workbook = openpyxl.load_workbook("questions.xlsx")
sheet_names = workbook.sheetnames

quizzes = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
def parse_options(options_str):
    # –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–¥–µ–ª–µ–Ω—ã ';'
    options = [opt.strip() for opt in options_str.split(';') if opt.strip()]
    return options

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
def parse_correct(correct_str):
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å —á–µ—Ä–µ–∑ ';' –∏–ª–∏ –ø—Ä–æ–±–µ–ª
    # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –±—É–∫–≤—É —Å )
    return [opt.strip() for opt in re.split(r'[; ]+', correct_str) if opt.strip()]

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª–∏—Å—Ç–∞–º
for sheet_name in sheet_names:
    sheet = workbook[sheet_name]
    data = []
    for row in sheet.iter_rows(min_row=2, values_only=True):
        if not row or not row[0]:
            continue
        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 4 –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ, –∏–ª–∏ –¥–æ–ø–æ–ª–Ω—è–µ–º None, –µ—Å–ª–∏ –º–µ–Ω—å—à–µ
        question, options, correct, explanation = (row + (None, None, None, None))[:4]

        data.append({
            "–í–æ–ø—Ä–æ—Å": str(question).strip() if question else "",
            "–í–∞—Ä–∏–∞–Ω—Ç—ã": parse_options(str(options)) if options else [],
            "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π": parse_correct(str(correct)) if correct else [],
            "–ü–æ—è—Å–Ω–µ–Ω–∏–µ": str(explanation).strip() if explanation else ""
        })
    quizzes[sheet_name] = data


def get_random_question(sheet_name):
    return random.choice(quizzes[sheet_name])

@app.route("/", methods=["POST"])
def main():
    req = request.json
    session = req.get("session", {})
    state = req.get("state", {}).get("session", {})
    command = req["request"]["command"].strip().upper()

    response = {
        "version": req["version"],
        "session": req["session"],
        "response": {"end_session": False}
    }

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if session.get("new", False):
        response["response"]["text"] = "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç (–ª–∏—Å—Ç) –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:"
        response["response"]["buttons"] = [{"title": name} for name in sheet_names]
        return jsonify(response)

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ª–∏—Å—Ç
    if command.capitalize() in sheet_names:
        topic = command.capitalize()
        question = get_random_question(topic)
        response["response"]["text"] = (
            f'–í—ã –≤—ã–±—Ä–∞–ª–∏ "{topic}".\n{question["–í–æ–ø—Ä–æ—Å"]}\n'
            f'–í–∞—Ä–∏–∞–Ω—Ç—ã: {", ".join(question["–í–∞—Ä–∏–∞–Ω—Ç—ã"])}'
        )
        response["session_state"] = {"topic": topic, "question": question}
        return jsonify(response)

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    if state.get("question"):
        topic = state["topic"]
        question = state["question"]
        correct = question["–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π"]

        # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        user_answers = re.findall(r'[–ê-–Ø–Å]\)', command)

        if sorted(user_answers) == sorted(correct):
            next_q = get_random_question(topic)
            response["response"]["text"] = (
                f"–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ\n–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n{next_q['–í–æ–ø—Ä–æ—Å']}\n"
                f"–í–∞—Ä–∏–∞–Ω—Ç—ã: {', '.join(next_q['–í–∞—Ä–∏–∞–Ω—Ç—ã'])}"
            )
            response["session_state"] = {"topic": topic, "question": next_q}
        else:
            response["response"]["text"] = (
                f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ üò¢\n{question['–ü–æ—è—Å–Ω–µ–Ω–∏–µ']}\n–í—ã–±–µ—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ."
            )
            response["response"]["buttons"] = [{"title": name} for name in sheet_names]
            response["session_state"] = {}
        return jsonify(response)

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞
    response["response"]["text"] = "–Ø –Ω–µ –ø–æ–Ω—è–ª–∞. –í—ã–±–µ—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç:"
    response["response"]["buttons"] = [{"title": name} for name in sheet_names]
    return jsonify(response)

@app.route("/", methods=["GET"])
def ping():
    return "–ù–∞–≤—ã–∫ –ê–ª–∏—Å—ã —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200


